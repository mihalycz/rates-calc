/*
 currency rates application 
*/
!function(){"use strict";angular.module("currency.rates",[])}(),function(){"use strict";var a={PATH_TO_LATEST_RATES:"http://api.fixer.io/latest?callback=JSON_CALLBACK"},b={FIXER_SERVER_ERROR:"There is a server error occurred during an attempt to get the rates.",NO_DATA_ERROR:"No data received.",BASE_CURRENCY_NOT_SUPPORTED:"Base currency is not supported.",RATE_CURRENCY_NOT_SUPPORTED:"Rate currency is not supported.",WRONG_BASE_CURRENCY_VALUE:"Base currency value is not set.",RATE_CURRENCY_VALUE_NOT_FOUND:"Rate currency value is not found"},c={SUPPORTED_CURRENCIES:["RUB","EUR"]};angular.module("currency.rates").constant("dataServicesConstants",a).constant("textConstants",b).constant("dataConstants",c)}(),function(){"use strict";function a(a){function b(){var b,c,d=a.SUPPORTED_CURRENCIES,e=d.length,f=[];if(e)for(var g=0;e>g;g+=1)if(b=d[g],"string"==typeof b&&b)for(var h=0;e>h;h+=1)c=d[h],"string"==typeof c&&c&&c.toLowerCase()!==b.toLowerCase()&&f.push({name:b+">"+c,base:b,into:c});return f}return{getConversionTypes:b}}angular.module("currency.rates").factory("conversionTypesBlService",["dataConstants",a])}(),function(){"use strict";function a(a,b,c,d,e){function f(f,g,h){var i=d.defer();return e(function(){-1===c.SUPPORTED_CURRENCIES.indexOf(f)&&i.reject(b.BASE_CURRENCY_NOT_SUPPORTED),-1===c.SUPPORTED_CURRENCIES.indexOf(g)&&i.reject(b.RATE_CURRENCY_NOT_SUPPORTED),h&&"number"==typeof h||i.reject(b.WRONG_BASE_CURRENCY_VALUE),a.getRate(f).then(function(a){var c=a.rates[g];c&&"number"==typeof c?i.resolve(c*h):i.reject(b.RATE_CURRENCY_VALUE_NOT_FOUND)},function(a){i.reject(a)})}),i.promise}return{convert:f}}angular.module("currency.rates").factory("currencyConverterBlService",["latestRatesDataService","textConstants","dataConstants","$q","$timeout",a])}(),function(){"use strict";function a(a,b,c,d){function e(c){return c&&"string"==typeof c?a.jsonp(b.PATH_TO_LATEST_RATES,{base:c}).then(f,g):null}function f(a){return"object"==typeof a.data&&a.data.hasOwnProperty("rates")?a.data:d.reject(c.NO_DATA_ERROR)}function g(a){return d.reject("error"===a.statusText?c.FIXER_SERVER_ERROR:a.statusText)}return{getRate:e}}angular.module("currency.rates").factory("latestRatesDataService",["jsonpHttpService","dataServicesConstants","textConstants","$q",a])}(),function(){"use strict";function a(a){function b(b,c,d,e){return a.jsonp(b,{params:c}).then(d,e)}return{jsonp:b}}angular.module("currency.rates").factory("jsonpHttpService",["$http",a])}(),function(){"use strict";function a(a){var b=a.getConversionTypes();return{conversionTypes:b,baseCurrencyValue:null,conversionType:b.length?b[0]:null,result:0}}angular.module("currency.rates").factory("currencyConverterModelService",["conversionTypesBlService",a])}(),function(){"use strict";function a(a,b,c){a.model=c,a.isProcessing=!1,a.isError=!1,a.errorReason=null,a.convert=function(){var c=a.model.baseCurrencyValue,d=a.model.conversionType;a.isProcessing||(a.model.result=0,c&&d.base&&d.into&&(a.isProcessing=!0,a.isError=!1,a.errorReason=null,b.convert(d.base,d.into,c).then(function(b){a.isProcessing=!1,a.model.result=b},function(b){a.isProcessing=!1,a.isError=!0,a.errorReason=b})))},a.$watch("model.conversionType",function(b,c){b&&a.convert()})}angular.module("currency.rates").controller("CurrencyConverterController",["$scope","currencyConverterBlService","currencyConverterModelService",a])}(),function(){"use strict";function a(){return{controller:"CurrencyConverterController",restrict:"E",templateUrl:"currency-converter.directive.html"}}angular.module("currency.rates").directive("currencyConverter",a)}(),function(){"use strict";function a(){return{require:"ngModel",restrict:"A",link:function(a,b,c,d){d.$parsers.push(function(a){return parseFloat(a||"")})}}}angular.module("currency.rates").directive("parseNumber",a)}(),angular.module("currency.rates").run(["$templateCache",function(a){"use strict";a.put("currency-converter.directive.html",'<form name="currencyConverterForm" class="currency-converter-form" ng-controller="CurrencyConverterController"><div class="converter-container"><input ng-change="convert()" type="number" name="base-currency-value" ng-model="model.baseCurrencyValue" ng-pattern="/^[0-9]+(\\.[0-9]{1,2})?$/" parse-number required><select name="conversion-type" class="conversion-type" ng-model="model.conversionType" ng-options="item.name for item in model.conversionTypes"></select></div><div class="converter-container-result" ng-show="model.result"><div class="result">{{ model.result | currency : (model.conversionType.into + " ") : 2 }}</div></div><div class="converter-container-processing" ng-show="isProcessing"><div class="processing"></div></div><div class="converter-container-processing" ng-show="isError"><div class="error">{{ errorReason }}</div></div></form>')}]);